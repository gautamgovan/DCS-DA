 close all; 
 clear all; %CLEARING SCREEN
 clc;
fs = 512 % fs â€” Sampling frequency, positive scalar. Sampling frequency, specified as a positive scalar. The sampling frequency is the number of samples per unit time. If the unit of time is seconds, the sampling frequency has units of hertz.
T = 1/fs;% sampling rate or frequency
load('hmwk_EEGs.mat') % contains eeg1 and fs
N =length(EEGsig); 
ls = size(EEGsig); % find the length of the data per second
tx =[0:length(EEGsig)-1]/fs;% Make time axis for EEG signal
fx = fs*(0:N/2-1)/N;   %Prepare freq data for plot
figure(1);
 plot(tx,EEGsig);
 xlabel('Time (s)'); 
 ylabel('Amplitude (uV)'); 
 title('Original EEG signal'); %EEG waveform
 figure(2);
 plot(tx,EEGsig);
xlabel('Time (s)'); 
ylabel('Amplitude (uV)'); 
title('Zoomed in EEG signal at 1 to 2 seconds'); 
xlim([1,2]); %  zoomed in on single ECG waveformfigure;
A=max(EEGsig);
B=min(EEGsig);
n1=8;%NO OF BITS PER SAMPLE
L=2^n1;
del=(A-B)/L;
partition=B:del:A; % definition of decision lines
codebook=B-(del/2):del:A+(del/2); % definition of representation levels
[index,quants] = quantiz(EEGsig,partition,codebook);
figure(3)
stem(quants)
xlabel('TIME(ms)');
ylabel('Amplitude(uv)');
title('quantized output');
l1=length(index); % to convert 1 to n as 0 to n-1 indicies
for i=1:l1
if (index(i)~=0)
index(i)=index(i)-1;
end
end
l2=length(quants);
for i=1:l2 % to convert the end representation levels within the range.
if(quants(i)==B-(del/2))
quants(i)=B+(del/2);
end
if(quants(i)==A+(del/2))
quants(i)=A-(del/2);
end
end
% ENCODING
code=de2bi(index,'left-msb'); % DECIMAL TO BINANRY CONV OF INDICIES
k=1;
for i=1:l1 % to convert column vector to row vector
for j=1:n1
coded(k)=code(i,j);
j=j+1;
k=k+1;
end
i=i+1;
end
figure(4);
hold on;
stairs(coded); % to plot coded in a stairs
axis([0 200 -2 2])
%plot of digital signal
title('DIGITAL SIGNAL');
xlabel('TIME');
ylabel('AMPLITUDE');
hold off;
% DEMODULATION
code1=reshape(coded,n1,(length(coded)/n1));
index1=bi2de(code1,'left-msb');
resignal=del*index+B+(del/2);
figure(5);
hold on;
plot(resignal);
title('DEMODULATED SIGNAL');
xlabel('TIME(ms)');
ylabel('AMPLITUDE');
hold off;
